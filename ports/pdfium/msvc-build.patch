diff --git a/core/fxcrt/byteorder.h b/core/fxcrt/byteorder.h
index af29b6c..30d96df 100644
--- a/core/fxcrt/byteorder.h
+++ b/core/fxcrt/byteorder.h
@@ -18,7 +18,7 @@ namespace internal {
 // TODO(thestig): Once C++23 is available, replace with std::byteswap.
 inline constexpr uint16_t ByteSwap(uint16_t x) {
 #if defined(COMPILER_MSVC) && !defined(__clang__)
-#error "MSVC is not supported."
+  return (x << 8) | (x >> 8);
 #else
   return __builtin_bswap16(x);
 #endif
@@ -26,7 +26,10 @@ inline constexpr uint16_t ByteSwap(uint16_t x) {
 
 inline constexpr uint32_t ByteSwap(uint32_t x) {
 #if defined(COMPILER_MSVC) && !defined(__clang__)
-#error "MSVC is not supported."
+  return (x << 24) |
+    ((x & 0x0000FF00) <<  8) |
+    ((x & 0x00FF0000) >>  8) |
+    (x >> 24);
 #else
   return __builtin_bswap32(x);
 #endif
diff --git a/core/fxcrt/immediate_crash.h b/core/fxcrt/immediate_crash.h
index 490a71c..82ae054 100644
--- a/core/fxcrt/immediate_crash.h
+++ b/core/fxcrt/immediate_crash.h
@@ -103,8 +103,8 @@
 
 #else
 
-#define TRAP_SEQUENCE1_() asm volatile("int3")
-#define TRAP_SEQUENCE2_() asm volatile("ud2")
+#define TRAP_SEQUENCE1_() __debugbreak()
+#define TRAP_SEQUENCE2_() ((void)0)
 
 #endif  // defined(ARCH_CPU_ARM64)
 
diff --git a/fpdfsdk/fpdf_annot.cpp b/fpdfsdk/fpdf_annot.cpp
index 5d31041..e908169 100644
--- a/fpdfsdk/fpdf_annot.cpp
+++ b/fpdfsdk/fpdf_annot.cpp
@@ -1157,9 +1157,9 @@ FPDFAnnot_SetAP(FPDF_ANNOTATION annot,
     return false;
   }
 
-  static constexpr auto kModeKeyForMode =
-      fxcrt::ToArray<const char*>({"N", "R", "D"});
-  static_assert(kModeKeyForMode.size() == FPDF_ANNOT_APPEARANCEMODE_COUNT,
+  static constexpr const char* kModeKeyForMode[] = {"N", "R", "D"};
+
+  static_assert(sizeof(kModeKeyForMode) / sizeof(kModeKeyForMode[0])== FPDF_ANNOT_APPEARANCEMODE_COUNT,
                 "length of kModeKeyForMode should be equal to "
                 "FPDF_ANNOT_APPEARANCEMODE_COUNT");
 
